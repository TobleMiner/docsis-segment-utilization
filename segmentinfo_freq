#!/usr/bin/env bash

function error() {
	(>&2 echo $@)
}

NUM_REGEX='^[0-9]+$'
function ensure_number() {
	if ! [[ "$1" =~ $NUM_REGEX ]]; then
		error "$2 must be a number"
		usage
	fi
}

function usage() {
	error "$0 [-a <adapter>] [-f <frontend>] <frequency>"
	exit 1
}

function snoop() {
	echo 0 | timeout 10 dvb-fe-tool -d DVBC/ANNEX_A -a $1 &> /dev/null
	timeout 10 dvbtune -f $2 -c $1 -s 6952 2> /dev/null
	timeout 10 dvbsnoop -adapter $1 -s bandwidth 8190 -n 5000 -hideproginfo
}

function cleanup() {
	if [ "$frontend" -ne 0 ]; then
	        mv "$frontend0_path" "$frontend_path"
	        mv "$frontend0_path"_orig "$frontend0_path"
	fi
	exit
}

adapter=0
frontend=0
while getopts "a:f:" opt; do
	case $opt in
		a) adapter=$OPTARG; ensure_number $adapter adapter;;
		f) frontend=$OPTARG; ensure_number $frontend frontend;;
		*) usage;;
	esac
done

adapter_path="/dev/dvb/adapter$adapter"
frontend_path="$adapter_path/frontend$frontend"
frontend0_path="$adapter_path/frontend0"

if [ $OPTIND -gt $# ]; then
	error "Please specify a frequency"
	usage "$0"
fi

freq=${!OPTIND}
ensure_number "$freq" frequency

if ! [ -e "$frontend_path" ]; then
	error "Frontend '$frontend_path' does not exist"
	exit 1
fi

if [ "$frontend" -ne 0 ]; then
	mv "$frontend0_path" "$frontend0_path"_orig
	mv "$frontend_path" "$frontend0_path"
fi

trap cleanup SIGINT SIGTERM EXIT

echo 0 > /sys/module/dvb_core/parameters/dvb_powerdown_on_sleep

kbps=$(snoop $adapter $freq | tail -n 1 | sed -n 's/^.*Avrg:\s\([0-9\.,]\+\).*$/\1/p')

echo $freq: $kbps

